{"version":3,"sources":["aoe2/router.cljs"],"mappings":";AAcA,AAAA,AAACA,AAEA,AAAKC;AAAL,AACE,AAAA,AAAgBA;;AAInB,AAAA,AAACC,AAEA,AAAAC,AAAKO;AAAL,AAAA,AAAAN,AAAAD;AAAAE,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAAA,AAAA,AAAAI,AAAAJ;AAAAE,AAAYI;AAAZN,AAAgBO;AAAhB,AAAA,AAAA,AACcA;;AAGf,AAAA,AAACC,AAEA,AAAKD;AAAL,AACE,AAACE,AAAMC,AAAeH;;AAGzB,AAAA,AAACI,AAEA,AAAAC,AAAKhB;AAAL,AAAA,AAAAiB,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASP;AAAT,AAAAQ,AAAAD,AAAA,AAAA,AAAWE;AAAX,AACE,AAAMC,AAAY,AAAA,AAAgBpB;AAC5BqB,AAAY,AAACC,AAAsB,AAAA,AAAcF,AAAWD;AADlE,AAEE,AAAA,AAACI,AAAMvB,AAAkB,AAAA,AAACuB,AAAMJ,AAAuBE;;AAI5D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKG,AAIWC,AAGF;AAAA,AACE,AAAA,AAAA,AAACC;;AACD,AAAA,AAACC;AATjB,AAUc;AAAA,AACE,AAAA,AAACA;AAXjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAcgBC,AAGF;AAAA,AACE,AAAA,AAACD;AAlBjB,AAqBc;AAAA,AACE,AAAA,AAACA;AAtBjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAyBWE,AAEKC,AACkBC,AAGf,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAApB,AAAAsB,AAAAF,AAAAA;AAAA,AAAAG,AAAAH,AAAA,AAAaI;AAAb,AACE,AAAMC,AAAO,AAAA,AAAKD;AAAlB,AACE,AAAA,AAACV,AAAyCW;AAjCjE,AAkCmB;AAAA,AACE,AAAA,AAACX;;AAEtB,AAAKY,AACH,AAAA,AAAA,AAAA,AAAA,AAACC,AACAhB,AACkBM;AAErB,AAAA,AAAMW,AAAatB;AAAnB,AACE,AAAMA;AAAN,AACE,AAAA,AAAA,AAACO,AAA8BP;;AADjC;;;AAGF,AAAA,AAAMuB;AAAN,AACE,AAAA,AAACC;;AACD,AAAA,AAAA,AAAA,AAAA,AAACC,AACAL,AACAE,AAGC,AAAKI,AAAOC,AAAEC,AAAGC;AAAjB,AAEE,AAAAC,AAAK,AAACC,AAAyBL,AAAOC,AAAEC,AAAGC;AAA3C,AAAA,AAAAC;AACK,AAAA,AAACE,AAAa,AAAA,AAACC,AAAS,AAAWL;;AADxCE","names":["re_frame.core.reg_sub","db","re_frame.core.reg_event_fx","p__48579","vec__48580","seq__48581","cljs.core/seq","first__48582","cljs.core/first","cljs.core/next","_cofx","_","route","re-frame.core/reg-fx","cljs.core.apply","reitit.frontend.easy/push-state","re_frame.core.reg_event_db","p__48583","vec__48584","cljs.core.nth","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","cljs.core.assoc","aoe2.router/routes","aoe2.views/home-panel","re-frame.core/dispatch","cljs.core.println","aoe2.views/about-panel","aoe2.views/civ-panel","reitit.coercion.malli/coercion","cljs.core/string?","p__48587","map__48588","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","path","civ-id","aoe2.router/router","reitit.frontend.router","aoe2.router/on-navigate","aoe2.router/init-routes!","js/console.log","reitit.frontend.easy/start!","router","e","el","uri","and__4115__auto__","reitit.frontend.history/ignore-anchor-click?","cljs.core.not_EQ_","goog.object/get"],"sourcesContent":["(ns aoe2.router\n  (:require\n   [reitit.coercion.malli]\n   [reitit.frontend]\n   [reitit.frontend.easy :as rfe]\n   [reitit.frontend.controllers :as rfc]\n   [reitit.frontend.history :as rfh]\n   [aoe2.views :as views]\n   [aoe2.events :as events]\n   [re-frame.core :as re-frame]\n   [goog.object :as gobj]))\n\n;;; Subs\n\n(re-frame/reg-sub\n :current-route\n (fn [db]\n   (:current-route db)))\n\n;;; Events\n\n(re-frame/reg-event-fx\n :navigate\n (fn [_cofx [_ & route]]\n   {:navigate! route}))\n\n;; Triggering navigation from events.\n(re-frame/reg-fx\n :navigate!\n (fn [route]\n   (apply rfe/push-state route)))\n\n\n(re-frame/reg-event-db\n :navigated\n (fn [db [_ new-match]]\n   (let [old-match   (:current-route db)\n         controllers (rfc/apply-controllers (:controllers old-match) new-match)]\n     (assoc db :current-route (assoc new-match :controllers controllers)))))\n\n;;; Routes\n\n(def routes\n  [\"/\"\n   [\"\"\n    {:name      :routes/home\n     :view      views/home-panel\n     :link-text \"Home\"\n     :controllers\n     [{:start (fn []\n                (re-frame/dispatch [::events/get-civilizations])\n                (println \"Entering home page\"))\n       :stop  (fn []\n                (println \"Leaving home page\"))}]}]\n   [\"about\"\n    {:name      :routes/files\n     :view      views/about-panel\n     :link-text \"about\"\n     :controllers\n     [{:start (fn []\n                (println \"Entering files page\")\n                ;;(re-frame/dispatch [::events/fetch-files])\n                )\n       :stop  (fn []\n                (println \"Leaving files page\"))}]}]\n   [\"civ/x\"\n    {:name :routes/civ\n     :view views/civ-panel\n     :link-text \"Civilizations\"\n     :coercion  reitit.coercion.malli/coercion\n     :params    {:path [:map [:id string?]]}\n     :controllers\n     [{:parameters {:path [:id]}\n       :start      (fn [{:keys [path]}]\n                     (let [civ-id (:id path)]\n                       (println \"Entering files/:id page for id\" civ-id)))\n       :stop       (fn []\n                     (println \"Leaving files page\"))}]}]])\n\n(def router\n  (reitit.frontend/router\n   routes\n   {:data {:coercion reitit.coercion.malli/coercion}}))\n\n(defn on-navigate [new-match]\n  (when new-match\n    (re-frame/dispatch [:navigated new-match])))\n\n(defn init-routes! []\n  (js/console.log \"initializing routes\")\n  (rfe/start!\n   router\n   on-navigate\n   {:use-fragment false\n    :ignore-anchor-click?\n    (fn [router e el uri]\n      ;; Add additional check on top of the default checks\n      (and (rfh/ignore-anchor-click? router e el uri)\n           (not= \"false\" (gobj/get (.-dataset el) \"reititHandleClick\"))))}))\n"]}